Script started on 2019-10-11 15:17:17-06:00
]0;abdullah.khan3@csa2:~/workspaces/cpsc355/assignment2abdullah.khan3@csa2:~/workspaces/cpsc355/assignment2$ gdb assign2a
GNU gdb (GDB) Fedora 8.1.1-4.fc28
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "aarch64-redhat-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from assign2a...(no debugging symbols found)...done.
(gdb) display/o[Ki $pc
1: x/i $pc
<error: No registers.>
(gdb) start
Temporary breakpoint 1 at 0x400624
Starting program: /home/ugb/abdullah.khan3/workspaces/cpsc355/assignment2/assign2a 
warning: the debug information found in "/usr/lib/debug//usr/lib64/ld-2.27.so.debug" does not match "/lib/ld-linux-aarch64.so.1" (CRC mismatch).

Missing separate debuginfos, use: dnf debuginfo-install glibc-2.27-38.fc28.aarch64
warning: the debug information found in "/usr/lib/debug//lib64/libc-2.27.so.debug" does not match "/lib64/libc.so.6" (CRC mismatch).

warning: the debug information found in "/usr/lib/debug//usr/lib64/libc-2.27.so.debug" does not match "/lib64/libc.so.6" (CRC mismatch).


Temporary breakpoint 1, 0x0000000000400624 in main ()
1: x/i $pc
=> 0x400624 <main+16>:	add	w20, w20, w24
(gdb) ni
0x0000000000400628 in main ()
1: x/i $pc
=> 0x400628 <main+20>:	mov	w19, #0x46                  	// #70
(gdb) ni
0x000000000040062c in main ()
1: x/i $pc
=> 0x40062c <main+24>:	mov	w21, #0x0                   	// #0
(gdb) ni
0x0000000000400630 in main ()
1: x/i $pc
=> 0x400630 <main+28>:	adrp	x0, 0x400000
(gdb) ni
0x0000000000400634 in main ()
1: x/i $pc
=> 0x400634 <main+32>:	add	x0, x0, #0x594
(gdb) ni
0x0000000000400638 in main ()
1: x/i $pc
=> 0x400638 <main+36>:	mov	w1, w19
(gdb) ni
0x000000000040063c in main ()
1: x/i $pc
=> 0x40063c <main+40>:	mov	w2, w19
(gdb) ni
0x0000000000400640 in main ()
1: x/i $pc
=> 0x400640 <main+44>:	mov	w3, w20
(gdb) ni
0x0000000000400644 in main ()
1: x/i $pc
=> 0x400644 <main+48>:	mov	w4, w20
(gdb) ni
0x0000000000400648 in main ()
1: x/i $pc
=> 0x400648 <main+52>:	bl	0x400480 <printf@plt>
(gdb) ni
multiplier = 0x00000046 (70)  multiplicand = 0xfefefefe (-16843010)

0x000000000040064c in main ()
1: x/i $pc
=> 0x40064c <main+56>:	cmp	w19, wzr
(gdb) ni
0x0000000000400650 in main ()
1: x/i $pc
=> 0x400650 <main+60>:	b.le	0x40065c <else>
(gdb) ni
0x0000000000400654 in main ()
1: x/i $pc
=> 0x400654 <main+64>:	mov	w23, #0x0                   	// #0
(gdb) ni
0x0000000000400658 in main ()
1: x/i $pc
=> 0x400658 <main+68>:	b	0x400660 <step1>
(gdb) si
0x0000000000400660 in step1 ()
1: x/i $pc
=> 0x400660 <step1>:	mov	w22, #0x0                   	// #0
(gdb) ni
0x0000000000400664 in step1 ()
1: x/i $pc
=> 0x400664 <step1+4>:	b	0x40069c <test1>
(gdb) ni[K[Ksi
0x000000000040069c in test1 ()
1: x/i $pc
=> 0x40069c <test1>:	cmp	w22, #0x20
(gdb) p $w19
$1 = 70
(gdb) p $w19[K[K20
$2 = 4278124286
(gdb) p $w20[K1
$3 = 0
(gdb) p $w21[K3[K2
$4 = 0
(gdb) p $w22[K[K[K[K[K $w21019[4Psini
0x00000000004006a0 in test1 ()
1: x/i $pc
=> 0x4006a0 <test1+4>:	b.lt	0x400668 <firstLoop>  // b.tstop
(gdb) si
0x0000000000400668 in firstLoop ()
1: x/i $pc
=> 0x400668 <firstLoop>:	and	w24, w19, #0x1
(gdb) bi[K[Kni
0x000000000040066c in firstLoop ()
1: x/i $pc
=> 0x40066c <firstLoop+4>:	cmp	w24, #0x0
(gdb) ni
0x0000000000400670 in firstLoop ()
1: x/i $pc
=> 0x400670 <firstLoop+8>:	b.eq	0x400678 <afterIf>  // b.none
(gdb) si
0x0000000000400678 in afterIf ()
1: x/i $pc
=> 0x400678 <afterIf>:	asr	w19, w19, #1
(gdb) ni
0x000000000040067c in afterIf ()
1: x/i $pc
=> 0x40067c <afterIf+4>:	and	w24, w21, #0x1
(gdb) ni
0x0000000000400680 in afterIf ()
1: x/i $pc
=> 0x400680 <afterIf+8>:	cmp	w24, #0x1
(gdb) ni
0x0000000000400684 in afterIf ()
1: x/i $pc
=> 0x400684 <afterIf+12>:	b.ne	0x400690 <innerElse>  // b.any
(gdb) nisinisini[1Pp $w2101920[K4
$5 = 0
(gdb) p $w24[K2
$6 = 0
(gdb) p $w22[K1
$7 = 0
(gdb) p $w2124[4Pni[K[Ksi
0x0000000000400690 in innerElse ()
1: x/i $pc
=> 0x400690 <innerElse>:	and	w19, w19, #0x7fffffff
(gdb) ni
0x0000000000400694 in finalLoopStep ()
1: x/i $pc
=> 0x400694 <finalLoopStep>:	asr	w21, w21, #1
(gdb) ni
0x0000000000400698 in finalLoopStep ()
1: x/i $pc
=> 0x400698 <finalLoopStep+4>:	add	w22, w22, #0x1
(gdb) ni
0x000000000040069c in test1 ()
1: x/i $pc
=> 0x40069c <test1>:	cmp	w22, #0x20
(gdb) ni
0x00000000004006a0 in test1 ()
1: x/i $pc
=> 0x4006a0 <test1+4>:	b.lt	0x400668 <firstLoop>  // b.tstop
(gdb) ni
0x0000000000400668 in firstLoop ()
1: x/i $pc
=> 0x400668 <firstLoop>:	and	w24, w19, #0x1
(gdb) ni
0x000000000040066c in firstLoop ()
1: x/i $pc
=> 0x40066c <firstLoop+4>:	cmp	w24, #0x0
(gdb) ni
0x0000000000400670 in firstLoop ()
1: x/i $pc
=> 0x400670 <firstLoop+8>:	b.eq	0x400678 <afterIf>  // b.none
(gdb) ni
0x0000000000400674 in firstLoop ()
1: x/i $pc
=> 0x400674 <firstLoop+12>:	add	w21, w21, w20
(gdb) ni
0x0000000000400678 in afterIf ()
1: x/i $pc
=> 0x400678 <afterIf>:	asr	w19, w19, #1
(gdb) ni
0x000000000040067c in afterIf ()
1: x/i $pc
=> 0x40067c <afterIf+4>:	and	w24, w21, #0x1
(gdb) ni
0x0000000000400680 in afterIf ()
1: x/i $pc
=> 0x400680 <afterIf+8>:	cmp	w24, #0x1
(gdb) ni
0x0000000000400684 in afterIf ()
1: x/i $pc
=> 0x400684 <afterIf+12>:	b.ne	0x400690 <innerElse>  // b.any
(gdb) ni[K[Kp $w19
$8 = 17
(gdb) p $w19[K[K20
$9 = 4278124286
(gdb) p $w20[K1
$10 = 4278124286
(gdb) p $w21[K2
$11 = 1
(gdb) p $w22[K3
$12 = 0
(gdb) q
A debugging session is active.

	Inferior 1 [process 27393] will be killed.

Quit anyway? (y or n) y
]0;abdullah.khan3@csa2:~/workspaces/cpsc355/assignment2abdullah.khan3@csa2:~/workspaces/cpsc355/assignment2$ exit
exit

Script done on 2019-10-11 15:20:18-06:00
